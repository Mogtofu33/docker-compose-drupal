################################################################################
# Docker compose Drupal full dev stack.
#
# A single Docker compose file that try to simply and quickly setup a full
# Drupal development environment.
#
# Project page:
#   https://github.com/Mogtofu33/docker-compose-drupal
#
# Quick set-up:
#  Copy this file, rename to docker-compose.yml, comment or remove services
#  definition based on your needs.
#  Copy and rename default.env to .env
#  Launch:
#    docker-compose up
#
# You can check your config after editing this file with:
#   docker-compose config
#
# Services settings are in config folder, check and adapt to your needs.
#
# For more information on docker compose file structure:
# @see https://docs.docker.com/compose/
#
################################################################################
version: '3'
services:
  apache:
    image: mogtofu33/apache-php:1.${PHP_VERSION:-7.0}
    ports:
      - "${APACHE_HOST_HTTP_PORT:-80}:80"
      - "${APACHE_HOST_HTTPS_PORT:-443}:443"
    links:
      ## Choose database, uncomment service concerned below.
      - mysql
      - pgsql
      ## Choose optionnal services.
      - memcache
      - redis
      - solr
      - mailhog
    volumes:
      - ${HOST_WEB_ROOT:-./data/www}:/www
      - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/apache2
      - ./config/php/:/etc/php7/conf.d/
      - ./config/apache/httpd.conf:/etc/apache2/httpd.conf
      - ./config/apache/vhost.conf:/etc/apache2/vhost/vhost.conf
      - ./config/apache/conf.d/:/etc/apache2/conf.d/
      ## Optional Drush alias file (or any other config)
      - ./config/drush/aliases.drushrc.php:/etc/drush/aliases.drushrc.php
      ## If you have composer set locally, share cache to speed up.
      # - $HOME/.composer/cache:/var/www/.composer/cache
    env_file: .env
    container_name: ddd-apache
    ## Remove to avoid starting on system reboot.
    restart: always
  mysql:
    image: mariadb:latest
    expose:
      - "3306"
    volumes:
      - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/mysql
      ## Comment these two lines on Windows system, permissions issue.
      - ${HOST_DATABASE_MYSQL:-./data/database/mysql}:/var/lib/mysql
      - ./config/mysql:/etc/mysql
    env_file: .env
    ## Remove to avoid starting on system reboot.
    restart: always
  pgsql:
    image: postgres:alpine
    expose:
      - "5432"
    ## Comment these two lines on Windows system, permissions issue.
    volumes:
      - ${HOST_DATABASE_POSTGRES:-./data/database/pgsql}:/var/lib/postgresql/data
    env_file: .env
    ## Remove to avoid starting on system reboot.
    restart: always
  mailhog:
    image: mailhog/mailhog
    expose:
      - "1025"
    ports:
      - "8025:8025"
    ## Remove to avoid starting on system reboot.
    restart: always
  memcache:
    image: memcached:alpine
    expose:
      - "11211"
    ## Remove to avoid starting on system reboot.
    restart: always
  redis:
    image: redis:alpine
    expose:
      - "6379"
    ## Remove to avoid starting on system reboot.
    restart: always
  solr:
    build: ./build/solr-${SOLR_VERSION:-6}
    ports:
      - "8983:8983"
    environment:
      - EXTRA_ACCESS="/solr/drupal"
    ## Remove to avoid starting on system reboot.
    restart: always
  # varnish:
  #   build: ./build/varnish
  #   ports:
  #     - "${VARNISH_HOST_PORT:-8080}:80"
  #     - "6082:6082"
  #   links:
  #     - apache
  #   volumes:
  #     - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/varnish
  #   env_file: .env
  #   ## Remove to avoid starting on system reboot.
  #   restart: always
  # ldap:
  #   image: osixia/openldap:latest
  #   ports:
  #     - "389:389"
  #   ## Remove to avoid starting on system reboot.
  #   restart: always
  # ldapadmin:
  #   image: osixia/phpldapadmin:latest
  #   links:
  #     - ldap
  #   ports:
  #     - "8443:8443"
  #   ## Remove to avoid starting on system reboot.
  #   restart: always
  dashboard:
    build: ./build/dashboard
    ports:
      - "8181:8181"
    volumes:
      - ./build/dashboard/src:/var/www/html
      - ${HOST_WEB_ROOT:-./data/www}:/www
      - /var/run/docker.sock:/var/run/docker.sock
    env_file: .env
